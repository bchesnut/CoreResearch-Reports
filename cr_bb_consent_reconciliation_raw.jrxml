<?xml version="1.0" encoding="UTF-8"?>
<!-- Created with Jaspersoft Studio version 6.1.1.final using JasperReports Library version 6.0.2  -->
<!-- 2016-08-29T11:05:14 -->
<jasperReport xmlns="http://jasperreports.sourceforge.net/jasperreports" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://jasperreports.sourceforge.net/jasperreports http://jasperreports.sourceforge.net/xsd/jasperreport.xsd" name="cr_bb_consent_reconciliation_raw" pageWidth="792" pageHeight="612" orientation="Landscape" columnWidth="792" leftMargin="0" rightMargin="0" topMargin="0" bottomMargin="0" scriptletClass="sapphire.report.JasperReportScriptlet" whenResourceMissingType="Empty" isIgnorePagination="true" uuid="18083936-3bd0-4b3c-a380-3386c1d96503">
	<property name="ireport.scriptlethandling" value="2"/>
	<property name="ireport.encoding" value="UTF-8"/>
	<property name="ireport.zoom" value="1.5"/>
	<property name="ireport.x" value="0"/>
	<property name="ireport.y" value="0"/>
	<property name="com.jaspersoft.studio.data.sql.tables" value=""/>
	<property name="com.jaspersoft.studio.unit." value="pixel"/>
	<property name="com.jaspersoft.studio.unit.pageHeight" value="inch"/>
	<property name="com.jaspersoft.studio.unit.pageWidth" value="inch"/>
	<property name="com.jaspersoft.studio.data.defaultdataadapter" value="LVQA1"/>
	<import value="net.sf.jasperreports.engine.*"/>
	<import value="java.util.*"/>
	<import value="net.sf.jasperreports.engine.data.*"/>
	<style name="EvenOddBackground" forecolor="#000000">
		<conditionalStyle>
			<conditionExpression><![CDATA[new Boolean($V{REPORT_COUNT}.intValue() % 2 ==  1)]]></conditionExpression>
			<style forecolor="#000000" backcolor="#CCFFFF"/>
		</conditionalStyle>
	</style>
	<parameter name="SAPPHIRE_CurrentUser" class="java.lang.String">
		<parameterDescription><![CDATA[Current Sapphire SYSUSERID]]></parameterDescription>
		<defaultValueExpression><![CDATA["<currentuser>"]]></defaultValueExpression>
	</parameter>
	<parameter name="SAPPHIRE_ReportRoot" class="java.lang.String" isForPrompting="false">
		<parameterDescription><![CDATA[Root Folder where Report Files are Stored]]></parameterDescription>
		<defaultValueExpression><![CDATA["./"]]></defaultValueExpression>
	</parameter>
	<parameter name="SAPPHIRE_ReportPath" class="java.lang.String" isForPrompting="false">
		<parameterDescription><![CDATA[Folder where this Report File is located]]></parameterDescription>
		<defaultValueExpression><![CDATA["./"]]></defaultValueExpression>
	</parameter>
	<parameter name="SAPPHIRE_SDCID" class="java.lang.String" isForPrompting="false">
		<parameterDescription><![CDATA[SDCID for this report]]></parameterDescription>
	</parameter>
	<parameter name="SAPPHIRE_KEYID1List" class="java.lang.String" isForPrompting="false">
		<parameterDescription><![CDATA[list of KeyIDs in format 'asdf','asdf',etc or a subselect]]></parameterDescription>
		<defaultValueExpression><![CDATA["'EnterTestIDHere'"]]></defaultValueExpression>
	</parameter>
	<parameter name="SAPPHIRE_KEYID1" class="java.lang.String" isForPrompting="false">
		<parameterDescription><![CDATA[keyid list in format ID1','ID2',...,'IDn]]></parameterDescription>
	</parameter>
	<parameter name="SAPPHIRE_KEYID2" class="java.lang.String" isForPrompting="false">
		<parameterDescription><![CDATA[keyid list in format ID1','ID2',...,'IDn]]></parameterDescription>
	</parameter>
	<parameter name="SAPPHIRE_KEYID3" class="java.lang.String" isForPrompting="false">
		<parameterDescription><![CDATA[keyid list in format ID1','ID2',...,'IDn]]></parameterDescription>
	</parameter>
	<parameter name="SAPPHIRE_ReportID" class="java.lang.String" isForPrompting="false">
		<parameterDescription><![CDATA[KeyID of the Report SDI]]></parameterDescription>
		<defaultValueExpression><![CDATA["<Report1>"]]></defaultValueExpression>
	</parameter>
	<parameter name="SAPPHIRE_ReportVersion" class="java.lang.String" isForPrompting="false">
		<parameterDescription><![CDATA[Version Number of the Report SDI]]></parameterDescription>
		<defaultValueExpression><![CDATA["<1>"]]></defaultValueExpression>
	</parameter>
	<parameter name="SAPPHIRE_ReportTitle" class="java.lang.String" isForPrompting="false">
		<parameterDescription><![CDATA[Title of the Report SDI.  Comes from the Description]]></parameterDescription>
		<defaultValueExpression><![CDATA["<ReportTitle>"]]></defaultValueExpression>
	</parameter>
	<parameter name="SAPPHIRE_DatabaseName" class="java.lang.String" isForPrompting="false">
		<parameterDescription><![CDATA[Name of the Sapphire Database Connection]]></parameterDescription>
		<defaultValueExpression><![CDATA["<databaseName>"]]></defaultValueExpression>
	</parameter>
	<parameter name="SAPPHIRE_ReportEventID" class="java.lang.String" isForPrompting="false">
		<parameterDescription><![CDATA[ID of the Report Event for Controlled Reports]]></parameterDescription>
	</parameter>
	<parameter name="SAPPHIRE_START_DATE" class="java.util.Date"/>
	<parameter name="SAPPHIRE_END_DATE" class="java.util.Date"/>
	<parameter name="WORKING_GROUP" class="java.lang.String" isForPrompting="false"/>
	<parameter name="STUDY_ID" class="java.lang.String"/>
	<queryString>
		<![CDATA[select study.s_studyid,
       study.studydesc,
       d.departmentid,
       d.departmentdesc,
       sysuser.sysuserdesc,
       rtext,
       rsort,
       rtotal
  from s_study study
    join department d on d.departmentid = study.securitydepartment
    join departmentsysuser dsu on dsu.departmentid = d.departmentid
    join sysuser sysuser on sysuser.sysuserid = dsu.sysuserid,
       (
select 'Total # Consent Responses' as rtext,
       10 as rsort,
       to_char(consent_yes + consent_no) as rtotal
  from (
    select (select count(*)
              from s_participant p
                join u_consentparticipntmap cp on p.s_participantid = cp.participantid
             where p.sstudyid = $P{STUDY_ID}
               and cp.consenteddt between $P{SAPPHIRE_START_DATE} and trunc($P{SAPPHIRE_END_DATE}) + 1 - 1/24/60/60
               and cp.consentflag = 'Yes') as consent_yes,
           (select count(*)
             from s_participant p
               join u_consentparticipntmap cp on p.s_participantid = cp.participantid
            where p.sstudyid =$P{STUDY_ID}
              and cp.consenteddt between $P{SAPPHIRE_START_DATE} and trunc($P{SAPPHIRE_END_DATE}) + 1 - 1/24/60/60
              and cp.consentflag = 'No') as consent_no
      from dual
    )
union all

Select 'Total # Consents = Yes' as rtext,
   20 as rsort,
   to_char(count(*)) as rtotal
   from s_participant p
     join u_consentparticipntmap cp on p.s_participantid = cp.participantid
   where p.sstudyid = $P{STUDY_ID}
     and cp.consenteddt between $P{SAPPHIRE_START_DATE} and trunc($P{SAPPHIRE_END_DATE}) + 1 - 1/24/60/60
   and cp.consentflag = 'Yes'
  
 union all
Select 'Total # Consents = No' as rtext,
   30 as rsort,
   to_char(count(*)) as rtotal
   from s_participant p
     join u_consentparticipntmap cp on p.s_participantid = cp.participantid
   where p.sstudyid =$P{STUDY_ID}
     and cp.consenteddt between $P{SAPPHIRE_START_DATE} and trunc($P{SAPPHIRE_END_DATE}) + 1 - 1/24/60/60
   and cp.consentflag = 'No'

union all


  select '# Consent Withdraws' as rtext,
    35 as rsort,
   to_char( count(*)) as rtotal
    from s_participant p
     join u_consentparticipntmap cp on p.s_participantid = cp.participantid
     join u_consent c on c.u_consentid = cp.consentid
     join s_study s on s.s_studyid = p.sstudyid
where p.sstudyid =$P{STUDY_ID} and cp.withdrawdt is not NULL
and cp.consenteddt between $P{SAPPHIRE_START_DATE} and trunc($P{SAPPHIRE_END_DATE}) + 1 - 1/24/60/60

union all
select 'Consent Success Rate' as rtext,
       40 as rsort,
       case 
         when nvl(consent_total,0) = 0 then '0%'
         else to_char(round(100 * consent_yes / consent_total, 2)) || '%' 
       end as rtotal
  from (
    select (select count(*)
              from s_participant p
                join u_consentparticipntmap cp on p.s_participantid = cp.participantid
             where p.sstudyid =$P{STUDY_ID}
               and cp.consenteddt between $P{SAPPHIRE_START_DATE} and trunc($P{SAPPHIRE_END_DATE}) + 1 - 1/24/60/60
               and cp.consentflag = 'Yes') as consent_yes,
           (select count(*)
             from s_participant p
               join u_consentparticipntmap cp on p.s_participantid = cp.participantid
            where p.sstudyid = $P{STUDY_ID}
              and cp.consenteddt between $P{SAPPHIRE_START_DATE} and trunc($P{SAPPHIRE_END_DATE}) + 1 - 1/24/60/60
              and cp.consentflag in ('Yes', 'No')) as consent_total
      from dual
    )


union all
select '# Participants Enrolled' as rtext,
   41 as rsort,
   to_char(count(*)) as rtotal
   from s_participant p
    where p.sstudyid=$P{STUDY_ID}
    and p.enrolldt between $P{SAPPHIRE_START_DATE} and trunc($P{SAPPHIRE_END_DATE}) + 1 - 1/24/60/60
    and p.participantstatus='Enrolled'
union all
select '# Participants Complete' as rtext,
   42 as rsort,
   to_char(count(*)) as rtotal
   from s_participant p
    where p.sstudyid=$P{STUDY_ID}
    and p.enrolldt between $P{SAPPHIRE_START_DATE} and trunc($P{SAPPHIRE_END_DATE}) + 1 - 1/24/60/60
    and p.participantstatus='Complete'
union all
select '# Participants Withdrawn' as rtext,
   43 as rsort,
   to_char(count(*)) as rtotal
   from s_participant p
    where p.sstudyid=$P{STUDY_ID}
    and p.enrolldt between $P{SAPPHIRE_START_DATE} and trunc($P{SAPPHIRE_END_DATE}) + 1 - 1/24/60/60
    and p.participantstatus='Withdrawn'

union all 


select '# Whole Blood Samples Collected' as rtext,
       151 as rsort,
       to_char(count(*)) as rtotal
  from s_samplefamily sf
    join s_sample s on s.samplefamilyid = sf.s_samplefamilyid
    join s_participant p on p.s_participantid = sf.participantid
 where p.sstudyid =$P{STUDY_ID}
   and (s.receiveddt between $P{SAPPHIRE_START_DATE} and trunc($P{SAPPHIRE_END_DATE}) + 1 - 1/24/60/60
     or s.confirmeddt between $P{SAPPHIRE_START_DATE} and trunc($P{SAPPHIRE_END_DATE}) + 1 - 1/24/60/60
   )
   and s.sampletypeid in ('Whole Blood', 'WHOLE BLOOD')
union all
select '# Tissue Samples Collected' as rtext,
       60 as rsort,
       to_char(count(*)) as rtotal
  from s_samplefamily sf
    join s_sample s on s.samplefamilyid = sf.s_samplefamilyid
    join s_participant p on p.s_participantid = sf.participantid
    join s_sampletype st on st.s_sampletypeid = s.sampletypeid
 where p.sstudyid =$P{STUDY_ID}
   and (s.receiveddt between $P{SAPPHIRE_START_DATE} and trunc($P{SAPPHIRE_END_DATE}) + 1 - 1/24/60/60
     or s.confirmeddt between $P{SAPPHIRE_START_DATE} and trunc($P{SAPPHIRE_END_DATE}) + 1 - 1/24/60/60
   )
   and st.u_tissueflag = 'Y'
union all
select 'Total Samples Collected' as rtext,
       70 as rsort,
       to_char(count(*)) as rtotal
  from s_samplefamily sf
    join s_sample s on s.samplefamilyid = sf.s_samplefamilyid
    join s_participant p on p.s_participantid = sf.participantid
 where p.sstudyid = $P{STUDY_ID}
   and (s.receiveddt between $P{SAPPHIRE_START_DATE} and trunc($P{SAPPHIRE_END_DATE}) + 1 - 1/24/60/60
     or s.confirmeddt between $P{SAPPHIRE_START_DATE} and trunc($P{SAPPHIRE_END_DATE}) + 1 - 1/24/60/60
   )
union all
select 'Total Tissue Samples Collected for participants' as rtext,
       80 as rsort,
       to_char(count(*)) as rtotal
  from s_participant p
 where p.sstudyid = $P{STUDY_ID}
   and exists (
    select *
      from s_samplefamily sf
        join s_sample s on s.samplefamilyid = sf.s_samplefamilyid
        join s_sampletype st on st.s_sampletypeid = s.sampletypeid
     where sf.participantid = p.s_participantid
     and (sf.collectiondt between $P{SAPPHIRE_START_DATE} and trunc($P{SAPPHIRE_END_DATE}) + 1 - 1/24/60/60
       or s.collectiondt between $P{SAPPHIRE_START_DATE} and trunc($P{SAPPHIRE_END_DATE}) + 1 - 1/24/60/60
     )
       and st.u_tissueflag = 'Y'
    )
union all
select '# Participants with Collection Failures' as rtext,
       90 as rsort,
       to_char(count(*)) as rtotal
  from s_participant p
 where exists (
     select *
       from s_participantevent pe
         join u_collectionfailure cf on cf.s_participanteventid = pe.s_participanteventid
      where pe.participantid = p.s_participantid
        and cf.createdt between $P{SAPPHIRE_START_DATE} and trunc($P{SAPPHIRE_END_DATE}) + 1 - 1/24/60/60
     )
     
 union all
    select 'Events' as rtext,
           95 as rsort,
           to_char(count(*)) as rtotal
      from s_participant p
             join s_participantevent pe on pe.participantid = p.s_participantid
     where p.sstudyid =$P{STUDY_ID}
       and pe.eventdt between $P{SAPPHIRE_START_DATE} and trunc($P{SAPPHIRE_END_DATE}) + 1 - 1/24/60/60 
     
  union all
    select 'Slides' as rtext,
           96 as rsort,
           to_char(count(*)) as rtotal
      from s_samplefamily sf
             join s_sample s on s.samplefamilyid = sf.s_samplefamilyid
             join s_participant p on p.s_participantid = sf.participantid
             join trackitem ti on ti.linksdcid = 'Sample' and ti.linkkeyid1 = s.s_sampleid
     where p.sstudyid = $P{STUDY_ID}
       and s.confirmeddt between $P{SAPPHIRE_START_DATE} and trunc($P{SAPPHIRE_END_DATE}) + 1 - 1/24/60/60
       and lower(ti.containertypeid) in ('slide')   
     
     
union all
select 'Total # Collection Failures' as rtext,
       100 as rsort,
       to_char(count(*)) as rtotal
  from s_participant p
    join s_participantevent pe on pe.participantid = p.s_participantid
    join u_collectionfailure cf on cf.s_participanteventid = pe.s_participanteventid
 where cf.createdt between $P{SAPPHIRE_START_DATE} and trunc($P{SAPPHIRE_END_DATE}) + 1 - 1/24/60/60
union all
select '# RNA Samples' as rtext,
       110 as rsort,
       to_char(count(*)) as rtotal
  from s_participant p
    join s_samplefamily sf on sf.participantid = p.s_participantid
    join s_sample s on s.samplefamilyid = sf.s_samplefamilyid
 where p.sstudyid = $P{STUDY_ID}
   and (s.receiveddt between $P{SAPPHIRE_START_DATE} and trunc($P{SAPPHIRE_END_DATE}) + 1 - 1/24/60/60
     or s.confirmeddt between $P{SAPPHIRE_START_DATE} and trunc($P{SAPPHIRE_END_DATE}) + 1 - 1/24/60/60
   )
   and s.sampletypeid in  ('Total RNA', 'TOTAL RNA')
   and s.confirmeddt is not null
union all
select '# RNA Samples passing QC' as rtext,
       120 as rsort,
       to_char(count(*)) as rtotal
  from (
  select nvl(sds.condition, 'Pass') as condition,
         dense_rank() over (partition by sds.keyid1 order by sds.dataset desc) as spec_rank
    from s_participant p
      join s_samplefamily sf on sf.participantid = p.s_participantid
      join s_sample s on s.samplefamilyid = sf.s_samplefamilyid
      join sdidataitemspec sds on sds.sdcid = 'Sample' and sds.keyid1 = s.s_sampleid
   where p.sstudyid =$P{STUDY_ID}
     and (s.receiveddt between $P{SAPPHIRE_START_DATE} and trunc($P{SAPPHIRE_END_DATE}) + 1 - 1/24/60/60
       or s.confirmeddt between $P{SAPPHIRE_START_DATE} and trunc($P{SAPPHIRE_END_DATE}) + 1 - 1/24/60/60
     )
     and s.sampletypeid in  ('Total RNA', 'TOTAL RNA')
     and s.confirmeddt is not null
     and sds.paramlistid = 'RNA Quant'
     and sds.paramid = 'OD 260/280'
   )
  where condition = 'Pass'
    and spec_rank = 1
union all
select '# DNA Samples' as rtext,
       130 as rsort,
       to_char(count(*)) as rtotal
  from s_participant p
    join s_samplefamily sf on sf.participantid = p.s_participantid
    join s_sample s on s.samplefamilyid = sf.s_samplefamilyid
 where p.sstudyid = $P{STUDY_ID}
   and (s.receiveddt between $P{SAPPHIRE_START_DATE} and trunc($P{SAPPHIRE_END_DATE}) + 1 - 1/24/60/60
     or s.confirmeddt between $P{SAPPHIRE_START_DATE} and trunc($P{SAPPHIRE_END_DATE}) + 1 - 1/24/60/60
   )
   and s.sampletypeid = 'DNA'
   and s.confirmeddt is not null
union all
select '# DNA Samples passing QC' as rtext,
       140 as rsort,
       to_char(count(*)) as rtotal
  from (
  select nvl(sds.condition, 'Pass') as condition,
         dense_rank() over (partition by sds.keyid1 order by sds.dataset desc) as spec_rank
    from s_participant p
      join s_samplefamily sf on sf.participantid = p.s_participantid
      join s_sample s on s.samplefamilyid = sf.s_samplefamilyid
      join sdidataitemspec sds on sds.sdcid = 'Sample' and sds.keyid1 = s.s_sampleid
   where p.sstudyid = $P{STUDY_ID}
     and (s.receiveddt between $P{SAPPHIRE_START_DATE} and trunc($P{SAPPHIRE_END_DATE}) + 1 - 1/24/60/60
       or s.confirmeddt between $P{SAPPHIRE_START_DATE} and trunc($P{SAPPHIRE_END_DATE}) + 1 - 1/24/60/60
     )
     and s.sampletypeid in  ('DNA')
     and s.confirmeddt is not null
     and sds.paramlistid = 'DNA Quant'
     and sds.paramid = 'OD 260/280'
   )
  where condition = 'Pass'
    and spec_rank = 1



union all
select '# Whole Blood Samples Collected By participant' as rtext,
       150 as rsort,
       to_char(count(*)) as rtotal
  from s_participant p
 where p.sstudyid = $P{STUDY_ID}
   and exists (
select *
  from s_samplefamily sf
    join s_sample s on s.samplefamilyid = sf.s_samplefamilyid
    join s_sampletype st on st.s_sampletypeid = s.sampletypeid
 where sf.participantid = p.s_participantid
   and sf.collectiondt between $P{SAPPHIRE_START_DATE} and trunc($P{SAPPHIRE_END_DATE}) + 1 - 1/24/60/60
   and s.sampletypeid in ('Whole Blood', 'WHOLE BLOOD')
)
union all
select 'Total Packages Shipped' as rtext,
       160 as rsort,
       to_char(count(*)) as rtotal
  from s_package pk
 where pk.sstudyid = $P{STUDY_ID}
   and pk.packagestatus = 'Shipped'
   and exists (
    select *
      from sdiaddress a 
     where a.sdcid = 'LV_Package' 
       and a.keyid1 = pk.s_packageid
       and a.contactfunction = 'ShippedBy'
       and a.functiondt between $P{SAPPHIRE_START_DATE} and trunc($P{SAPPHIRE_END_DATE}) + 1 - 1/24/60/60
    )
  union all
    select 'Tissue Collection Success Rate' as rtext,
           170 as rsort,
           to_char(
             case 
               when nvl(tissue_on_plan_events,0) = 0 then 0
               else round(nvl(tissue_collected_events,0) * 100 / tissue_on_plan_events,0)
             end
           ) || '%' as rtotal
      from (
        select (
          select count(*)
            from s_participant p
                   join s_participantevent pe on pe.participantid = p.s_participantid
           where p.sstudyid = $P{STUDY_ID}
             and pe.eventdt between $P{SAPPHIRE_START_DATE} and trunc($P{SAPPHIRE_END_DATE}) + 1 - 1/24/60/60
             and exists (
               select *
                 from s_eventdefsampletype es
                   join s_sampletype st on st.s_sampletypeid = es.s_sampletypeid
                where es.s_eventdefid = pe.eventdefid
                  and st.u_tissueflag = 'Y'
               )
          ) as tissue_on_plan_events, 
          (
          select count(*)
            from s_participant p
                   join s_participantevent pe on pe.participantid = p.s_participantid
           where p.sstudyid = $P{STUDY_ID}
             and pe.eventdt between $P{SAPPHIRE_START_DATE} and trunc($P{SAPPHIRE_END_DATE}) + 1 - 1/24/60/60
             and exists (
               select *
                 from s_eventdefsampletype es
                   join s_sampletype st on st.s_sampletypeid = es.s_sampletypeid
                where es.s_eventdefid = pe.eventdefid
                  and st.u_tissueflag = 'Y'
               )
             and exists (
               select *
                 from s_samplefamily sf
                   join s_sample s on s.samplefamilyid = sf.s_samplefamilyid
                   join s_sampletype st on st.s_sampletypeid = s.sampletypeid
                where sf.participantid = pe.participantid
                  and sf.participanteventid = pe.s_participanteventid
                  and st.u_tissueflag = 'Y'
               )
          )  as tissue_collected_events
      from dual
    )
    union all
    select 'Whole Blood Collection Success Rate' as rtext,
           180 as rsort,
           to_char(
             case 
               when nvl(blood_on_plan_events,0) = 0 then 0
               else round(nvl(blood_collected_events,0) * 100 / blood_on_plan_events,0)
             end
           ) || '%' as rtotal
      from (
        select (
          select count(*)
            from s_participant p
                   join s_participantevent pe on pe.participantid = p.s_participantid
           where p.sstudyid = $P{STUDY_ID}
             and pe.eventdt between $P{SAPPHIRE_START_DATE} and trunc($P{SAPPHIRE_END_DATE}) + 1 - 1/24/60/60
             
             and exists (
               select *
                 from s_eventdefsampletype es
                where es.s_eventdefid = pe.eventdefid
                  and lower(es.s_sampletypeid) = 'whole blood'
               )
          ) as blood_on_plan_events,
          (
          select count(*)
            from s_participant p
                   join s_participantevent pe on pe.participantid = p.s_participantid
           where p.sstudyid =$P{STUDY_ID}
             and pe.eventdt between $P{SAPPHIRE_START_DATE} and trunc($P{SAPPHIRE_END_DATE}) + 1 - 1/24/60/60
            
             and exists (
               select *
                 from s_eventdefsampletype es
                where es.s_eventdefid = pe.eventdefid
                  and lower(es.s_sampletypeid) = 'whole blood'
               )
            
             and exists (
               select *
                 from s_samplefamily sf
                   join s_sample s on s.samplefamilyid = sf.s_samplefamilyid
                where sf.participantid = pe.participantid
                  and sf.participanteventid = pe.s_participanteventid
                  and lower(s.sampletypeid) = 'whole blood'
               )
          ) as blood_collected_events
      from dual
  )
)
 where dsu.sysuserid = $P{SAPPHIRE_CurrentUser}
   and  study.s_studyid = $P{STUDY_ID}
 order by rsort]]>
	</queryString>
	<field name="S_STUDYID" class="java.lang.String"/>
	<field name="STUDYDESC" class="java.lang.String"/>
	<field name="DEPARTMENTID" class="java.lang.String"/>
	<field name="DEPARTMENTDESC" class="java.lang.String"/>
	<field name="SYSUSERDESC" class="java.lang.String"/>
	<field name="RTEXT" class="java.lang.String"/>
	<field name="RSORT" class="java.math.BigDecimal"/>
	<field name="RTOTAL" class="java.lang.String"/>
	<background>
		<band splitType="Stretch"/>
	</background>
	<title>
		<band splitType="Stretch"/>
	</title>
	<columnHeader>
		<band height="30">
			<staticText>
				<reportElement x="0" y="0" width="100" height="30" uuid="7be6aa98-39ac-4f1b-b431-d4f6facbecaa"/>
				<text><![CDATA[S_STUDYID]]></text>
			</staticText>
			<staticText>
				<reportElement x="100" y="0" width="100" height="30" uuid="5119966f-12ba-4fcb-9cb6-dd63f3c2298e"/>
				<text><![CDATA[STUDYDESC]]></text>
			</staticText>
			<staticText>
				<reportElement x="200" y="0" width="100" height="30" uuid="09b8d8d1-55aa-4004-9c3d-6b6e6dc9ca3d"/>
				<text><![CDATA[DEPARTMENTDESC]]></text>
			</staticText>
			<staticText>
				<reportElement x="300" y="0" width="100" height="30" uuid="9c352258-b9c7-4299-9896-74c24d3c23a5"/>
				<text><![CDATA[RTEXT]]></text>
			</staticText>
			<staticText>
				<reportElement x="400" y="0" width="100" height="30" uuid="8f8c5289-5bea-4db3-ad66-7551493fd4e2"/>
				<text><![CDATA[RTOTAL]]></text>
			</staticText>
		</band>
	</columnHeader>
	<detail>
		<band height="30">
			<textField isBlankWhenNull="true">
				<reportElement x="0" y="0" width="100" height="30" uuid="6ba4ca04-4aab-4447-84dd-8f503651ff1b"/>
				<textFieldExpression><![CDATA[$F{S_STUDYID}]]></textFieldExpression>
			</textField>
			<textField isBlankWhenNull="true">
				<reportElement x="100" y="0" width="100" height="30" uuid="98af249b-7c98-42dc-94d6-527bbcbb7bed"/>
				<textFieldExpression><![CDATA[$F{STUDYDESC}]]></textFieldExpression>
			</textField>
			<textField isBlankWhenNull="true">
				<reportElement x="200" y="0" width="100" height="30" uuid="84617c8f-f1cf-4994-a851-a687bc6516c4"/>
				<textFieldExpression><![CDATA[$F{DEPARTMENTDESC}]]></textFieldExpression>
			</textField>
			<textField isBlankWhenNull="true">
				<reportElement x="300" y="0" width="100" height="30" uuid="aaf1b3fb-0ca4-4e7c-8ab5-0de5ca88f682"/>
				<textFieldExpression><![CDATA[$F{RTEXT}]]></textFieldExpression>
			</textField>
			<textField isBlankWhenNull="true">
				<reportElement x="400" y="0" width="100" height="30" uuid="599da9a3-6b7d-400b-8a8e-ea43bc8f98c1"/>
				<textFieldExpression><![CDATA[$F{RTOTAL}]]></textFieldExpression>
			</textField>
		</band>
	</detail>
	<columnFooter>
		<band splitType="Stretch"/>
	</columnFooter>
	<pageFooter>
		<band splitType="Stretch"/>
	</pageFooter>
	<summary>
		<band splitType="Stretch"/>
	</summary>
</jasperReport>
